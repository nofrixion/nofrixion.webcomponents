#------------------------------------------------------------------------------
#
# Filename: azure-pipeline-dev.yml
#
# Description: Deploy react payelement dev storage account with dev/sandbox filenames.
#
# Usage:  Run from devops pipeline. Notes:
#         - Set a variable called 'environment' in the pipeline GUI to specify whether DEV or 
#           SANDBOX filenames are to be used.
#         - The version is extracted from the package.json file by npm build and the pipeline copy tasks
#         - The versioned bundle copy depends on there being a single *.js file in the dist/ directory
#
# Author: James Bramich (james@nofrixion.com)
#
# History:
# 15 December 2022  James Bramich   Created, Northdown, Australia
#  2 March    2023  James Bramich   updated to allow for 'sandbox' deployment
# 18 May      2023  Axel Granillo   Changed destination to production CDN, "dev" folder
#-----------------------------------------------------------------------------

pr: none # don't run on PR
trigger:
  - develop

variables:
# Azure service connection for storage account access
  serviceConnection: "Prod Azure - NoFrixion Ops"
  storageAccountName: "nofrixioncdn"
  bundleName: "nofrixion-nextgen.js"
  cdnRg: "nofrixion-ops"
  cdnName: "nofrixioncdn"
  cdnProfileName: "nofrixioncdn"

# A windows agent is required here as the AzureFileCopy@4 task is windows only.
pool:
  vmImage: "windows-latest"

steps:
  # these steps set the .js bundle names
  - bash: |
      # get package version from package.json file
      version=$(cat package.json | jq -r '.version')
      echo "Version is: $version"
      echo "##vso[task.setvariable variable=versionedBundleName;]nofrixion-nextgen-v${version}.min.js"
    displayName: 'set DEV .js bundle names'

  - task: NodeTool@0
    inputs:
      versionSpec: "16.x"
    displayName: "Install Node.js"

  - script: |
      npm install
    displayName: "npm install"

  - script: |
      npm run build --omit=dev -- --env public_path="$(PublicPath)"
    displayName: "npm build prod"

  - script: |
      rm dist/js/*.txt
      mv dist/js/*.js "dist/js/$(versionedBundleName)"
      cd dist/js
      mkdir chunks
      cd ../..
      mv dist/*.js dist/js/chunks
    displayName: "Rename bundles and remove license file"

  # Creates folder structure for blob container
  - task: CopyFiles@2
    inputs:
      sourceFolder: "$(Build.SourcesDirectory)/dist/js"
      contents: "**"
      targetFolder: "$(Build.ArtifactStagingDirectory)/dev"
    displayName: "Copy js files"

  - script: |
      echo "Bundle filename is: $(bundleName)"
      cp dist/payelement/payelement.js  $(Build.ArtifactStagingDirectory)/dev/$(bundleName)
    displayName: "Copy non-versioned bundle to staging dir"

  # Copy main .js file to the $web container.
  - task: AzureFileCopy@4
    inputs:
      sourcePath: $(Build.ArtifactStagingDirectory)/dev
      azureSubscription: $(serviceConnection)
      destination: azureBlob
      storage: "$(storageAccountName)"
      containerName: "$web"
    displayName: "Copy dev bundle into $web blob container"

# Purge CDN endpoint to remove old version
  - task: AzureCLI@2
    displayName: Purge CDN endpoint
    inputs:
      azureSubscription: $(serviceConnection)
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        az cdn endpoint purge -g "$(cdnRg)" -n "$(cdnName)" --profile-name "$(cdnProfileName)" --content-paths '/dev/*' '/dev/chunks/*'